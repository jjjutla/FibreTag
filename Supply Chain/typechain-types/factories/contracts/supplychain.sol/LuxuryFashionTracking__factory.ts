/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LuxuryFashionTracking,
  LuxuryFashionTrackingInterface,
} from "../../../contracts/supplychain.sol/LuxuryFashionTracking";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "completeManufacturingStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createProduct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "finishManufacturing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getHistory",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "enum LuxuryFashionTracking.ManufacturingStage",
        name: "stage",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "sellProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "startManufacturingStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5061198f806100256000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637acc0b201161005b5780637acc0b2014610111578063aae06fba14610143578063c8691b2a1461015f578063e0f6ef871461019057610088565b806302ec06be1461008d57806306797ad7146100bd5780630b569140146100d957806330db128f146100f5575b600080fd5b6100a760048036038101906100a29190610f04565b6101ae565b6040516100b49190610f66565b60405180910390f35b6100d760048036038101906100d29190610fad565b610451565b005b6100f360048036038101906100ee9190611038565b6105d1565b005b61010f600480360381019061010a9190610fad565b610782565b005b61012b60048036038101906101269190610fad565b610902565b60405161013a9392919061117d565b60405180910390f35b61015d60048036038101906101589190610fad565b6109e1565b005b61017960048036038101906101749190610fad565b610b22565b604051610187929190611385565b60405180910390f35b610198610c7d565b6040516101a59190610f66565b60405180910390f35b6000600160008154809291906101c3906113eb565b91905055506040518060a001604052808381526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016000600281111561020957610208611106565b5b8152602001600067ffffffffffffffff81111561022957610228610dd9565b5b60405190808252806020026020018201604052801561025c57816020015b60608152602001906001900390816102475790505b508152602001600067ffffffffffffffff81111561027d5761027c610dd9565b5b6040519080825280602002602001820160405280156102ab5781602001602082028036833780820191505090505b50815250600080600154815260200190815260200160002060008201518160000190816102d8919061163f565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600281111561034b5761034a611106565b5b0217905550606082015181600201908051906020019061036c929190610c83565b506080820151816003019080519060200190610389929190610cdc565b50905050600080600154815260200190815260200160002060020180600181540180825580915050600190039060005260206000200160006040518060400160405280600f81526020017f50726f647563742063726561746564000000000000000000000000000000000081525090919091509081610408919061163f565b5060008060015481526020019081526020016000206003014290806001815401808255809150506001900390600052602060002001600090919091909150556001549050919050565b6000600281111561046557610464611106565b5b60008083815260200190815260200160002060010160149054906101000a900460ff16600281111561049a57610499611106565b5b146104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190611783565b60405180910390fd5b600160008083815260200190815260200160002060010160146101000a81548160ff0219169083600281111561051357610512611106565b5b021790555060008082815260200190815260200160002060020180600181540180825580915050600190039060005260206000200160006040518060400160405280601b81526020017f4d616e75666163747572696e672073746167652073746172746564000000000081525090919091509081610591919061163f565b5060008082815260200190815260200160002060030142908060018154018082558091505060019003906000526020600020016000909190919091505550565b3073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611815565b60405180910390fd5b8060008084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008083815260200190815260200160002060020180600181540180825580915050600190039060005260206000200160006040518060400160405280600c81526020017f50726f6475637420736f6c64000000000000000000000000000000000000000081525090919091509081610741919061163f565b506000808381526020019081526020016000206003014290806001815401808255809150506001900390600052602060002001600090919091909150555050565b6001600281111561079657610795611106565b5b60008083815260200190815260200160002060010160149054906101000a900460ff1660028111156107cb576107ca611106565b5b1461080b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610802906118a7565b60405180910390fd5b600260008083815260200190815260200160002060010160146101000a81548160ff0219169083600281111561084457610843611106565b5b021790555060008082815260200190815260200160002060020180600181540180825580915050600190039060005260206000200160006040518060400160405280601d81526020017f4d616e75666163747572696e6720737461676520636f6d706c65746564000000815250909190915090816108c2919061163f565b5060008082815260200190815260200160002060030142908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060205280600052604060002060009150905080600001805461092590611462565b80601f016020809104026020016040519081016040528092919081815260200182805461095190611462565b801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b6002808111156109f4576109f3611106565b5b60008083815260200190815260200160002060010160149054906101000a900460ff166002811115610a2957610a28611106565b5b14610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6090611939565b60405180910390fd5b60008082815260200190815260200160002060020180600181540180825580915050600190039060005260206000200160006040518060400160405280601681526020017f4d616e75666163747572696e672066696e69736865640000000000000000000081525090919091509081610ae2919061163f565b5060008082815260200190815260200160002060030142908060018154018082558091505060019003906000526020600020016000909190919091505550565b60608060008084815260200190815260200160002060020160008085815260200190815260200160002060030181805480602002602001604051908101604052809291908181526020016000905b82821015610c1c578382906000526020600020018054610b8f90611462565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90611462565b8015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b505050505081526020019060010190610b70565b50505050915080805480602002602001604051908101604052809291908181526020018280548015610c6d57602002820191906000526020600020905b815481526020019060010190808311610c59575b5050505050905091509150915091565b60015481565b828054828255906000526020600020908101928215610ccb579160200282015b82811115610cca578251829081610cba919061163f565b5091602001919060010190610ca3565b5b509050610cd89190610d29565b5090565b828054828255906000526020600020908101928215610d18579160200282015b82811115610d17578251825591602001919060010190610cfc565b5b509050610d259190610d4d565b5090565b5b80821115610d495760008181610d409190610d6a565b50600101610d2a565b5090565b5b80821115610d66576000816000905550600101610d4e565b5090565b508054610d7690611462565b6000825580601f10610d885750610da7565b601f016020900490600052602060002090810190610da69190610d4d565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e1182610dc8565b810181811067ffffffffffffffff82111715610e3057610e2f610dd9565b5b80604052505050565b6000610e43610daa565b9050610e4f8282610e08565b919050565b600067ffffffffffffffff821115610e6f57610e6e610dd9565b5b610e7882610dc8565b9050602081019050919050565b82818337600083830152505050565b6000610ea7610ea284610e54565b610e39565b905082815260208101848484011115610ec357610ec2610dc3565b5b610ece848285610e85565b509392505050565b600082601f830112610eeb57610eea610dbe565b5b8135610efb848260208601610e94565b91505092915050565b600060208284031215610f1a57610f19610db4565b5b600082013567ffffffffffffffff811115610f3857610f37610db9565b5b610f4484828501610ed6565b91505092915050565b6000819050919050565b610f6081610f4d565b82525050565b6000602082019050610f7b6000830184610f57565b92915050565b610f8a81610f4d565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b600060208284031215610fc357610fc2610db4565b5b6000610fd184828501610f98565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100582610fda565b9050919050565b61101581610ffa565b811461102057600080fd5b50565b6000813590506110328161100c565b92915050565b6000806040838503121561104f5761104e610db4565b5b600061105d85828601610f98565b925050602061106e85828601611023565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b2578082015181840152602081019050611097565b60008484015250505050565b60006110c982611078565b6110d38185611083565b93506110e3818560208601611094565b6110ec81610dc8565b840191505092915050565b61110081610ffa565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061114657611145611106565b5b50565b600081905061115782611135565b919050565b600061116782611149565b9050919050565b6111778161115c565b82525050565b6000606082019050818103600083015261119781866110be565b90506111a660208301856110f7565b6111b3604083018461116e565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061120382611078565b61120d81856111e7565b935061121d818560208601611094565b61122681610dc8565b840191505092915050565b600061123d83836111f8565b905092915050565b6000602082019050919050565b600061125d826111bb565b61126781856111c6565b935083602082028501611279856111d7565b8060005b858110156112b557848403895281516112968582611231565b94506112a183611245565b925060208a0199505060018101905061127d565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6112fc81610f4d565b82525050565b600061130e83836112f3565b60208301905092915050565b6000602082019050919050565b6000611332826112c7565b61133c81856112d2565b9350611347836112e3565b8060005b8381101561137857815161135f8882611302565b975061136a8361131a565b92505060018101905061134b565b5085935050505092915050565b6000604082019050818103600083015261139f8185611252565b905081810360208301526113b38184611327565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113f682610f4d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611428576114276113bc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061147a57607f821691505b60208210810361148d5761148c611433565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114b8565b6114ff86836114b8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061153c61153761153284610f4d565b611517565b610f4d565b9050919050565b6000819050919050565b61155683611521565b61156a61156282611543565b8484546114c5565b825550505050565b600090565b61157f611572565b61158a81848461154d565b505050565b5b818110156115ae576115a3600082611577565b600181019050611590565b5050565b601f8211156115f3576115c481611493565b6115cd846114a8565b810160208510156115dc578190505b6115f06115e8856114a8565b83018261158f565b50505b505050565b600082821c905092915050565b6000611616600019846008026115f8565b1980831691505092915050565b600061162f8383611605565b9150826002028217905092915050565b61164882611078565b67ffffffffffffffff81111561166157611660610dd9565b5b61166b8254611462565b6116768282856115b2565b600060209050601f8311600181146116a95760008415611697578287015190505b6116a18582611623565b865550611709565b601f1984166116b786611493565b60005b828110156116df578489015182556001820191506020850194506020810190506116ba565b868310156116fc57848901516116f8601f891682611605565b8355505b6001600288020188555050505b505050505050565b7f537461676520686173206569746865722073746172746564206f7220636f6d7060008201527f6c65746564000000000000000000000000000000000000000000000000000000602082015250565b600061176d602583611083565b915061177882611711565b604082019050919050565b6000602082019050818103600083015261179c81611760565b9050919050565b7f50726f6475637420697320616c726561647920736f6c64206f72206e6f74206160008201527f7661696c61626c65000000000000000000000000000000000000000000000000602082015250565b60006117ff602883611083565b915061180a826117a3565b604082019050919050565b6000602082019050818103600083015261182e816117f2565b9050919050565b7f537461676520686173206e6f742073746172746564206f7220616c726561647960008201527f20636f6d706c6574656400000000000000000000000000000000000000000000602082015250565b6000611891602a83611083565b915061189c82611835565b604082019050919050565b600060208201905081810360008301526118c081611884565b9050919050565b7f4d616e75666163747572696e67206973206e6f742079657420636f6d706c657460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611923602283611083565b915061192e826118c7565b604082019050919050565b6000602082019050818103600083015261195281611916565b905091905056fea264697066735822122074134142368f7beed55bf10cb2f3f9c4a6193f32a526c0cb790fd2b41d1e315264736f6c63430008140033";

type LuxuryFashionTrackingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LuxuryFashionTrackingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LuxuryFashionTracking__factory extends ContractFactory {
  constructor(...args: LuxuryFashionTrackingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LuxuryFashionTracking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LuxuryFashionTracking__factory {
    return super.connect(runner) as LuxuryFashionTracking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LuxuryFashionTrackingInterface {
    return new Interface(_abi) as LuxuryFashionTrackingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LuxuryFashionTracking {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LuxuryFashionTracking;
  }
}
