/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/nftTry.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029bf380380620029bf8339818101604052810190620000379190620002a3565b806040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160009081620000b591906200054f565b508060019081620000c791906200054f565b5050506000600660006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200015a5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000151919062000647565b60405180910390fd5b6200016b816200017360201b60201c565b505062000664565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200026b826200023e565b9050919050565b6200027d816200025e565b81146200028957600080fd5b50565b6000815190506200029d8162000272565b92915050565b600060208284031215620002bc57620002bb62000239565b5b6000620002cc848285016200028c565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035757607f821691505b6020821081036200036d576200036c6200030f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000398565b620003e3868362000398565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004306200042a6200042484620003fb565b62000405565b620003fb565b9050919050565b6000819050919050565b6200044c836200040f565b620004646200045b8262000437565b848454620003a5565b825550505050565b600090565b6200047b6200046c565b6200048881848462000441565b505050565b5b81811015620004b057620004a460008262000471565b6001810190506200048e565b5050565b601f821115620004ff57620004c98162000373565b620004d48462000388565b81016020851015620004e4578190505b620004fc620004f38562000388565b8301826200048d565b50505b505050565b600082821c905092915050565b6000620005246000198460080262000504565b1980831691505092915050565b60006200053f838362000511565b9150826002028217905092915050565b6200055a82620002d5565b67ffffffffffffffff811115620005765762000575620002e0565b5b6200058282546200033e565b6200058f828285620004b4565b600060209050601f831160018114620005c75760008415620005b2578287015190505b620005be858262000531565b8655506200062e565b601f198416620005d78662000373565b60005b828110156200060157848901518255600182019150602085019450602081019050620005da565b868310156200062157848901516200061d601f89168262000511565b8355505b6001600288020188555050505b505050505050565b62000641816200025e565b82525050565b60006020820190506200065e600083018462000636565b92915050565b61234b80620006746000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b4114610300578063a22cb4651461031e578063b88d4fde1461033a578063c87b56dd14610356578063e985e9c514610386578063f2fde38b146103b657610137565b80636352211e1461026e57806370a082311461029e578063715018a6146102ce5780638456cb59146102d85780638da5cb5b146102e257610137565b80633f4ba83a116100ff5780633f4ba83a146101f257806340d097c3146101fc57806342842e0e1461021857806342966c68146102345780635c975abb1461025057610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b61015660048036038101906101519190611b1e565b6103d2565b6040516101639190611b66565b60405180910390f35b6101746104b4565b6040516101819190611c11565b60405180910390f35b6101a4600480360381019061019f9190611c69565b610546565b6040516101b19190611cd7565b60405180910390f35b6101d460048036038101906101cf9190611d1e565b610562565b005b6101f060048036038101906101eb9190611d5e565b610578565b005b6101fa61067a565b005b61021660048036038101906102119190611db1565b61068c565b005b610232600480360381019061022d9190611d5e565b6106bd565b005b61024e60048036038101906102499190611c69565b6106dd565b005b6102586106f4565b6040516102659190611b66565b60405180910390f35b61028860048036038101906102839190611c69565b61070b565b6040516102959190611cd7565b60405180910390f35b6102b860048036038101906102b39190611db1565b61071d565b6040516102c59190611ded565b60405180910390f35b6102d66107d7565b005b6102e06107eb565b005b6102ea6107fd565b6040516102f79190611cd7565b60405180910390f35b610308610827565b6040516103159190611c11565b60405180910390f35b61033860048036038101906103339190611e34565b6108b9565b005b610354600480360381019061034f9190611fa9565b6108cf565b005b610370600480360381019061036b9190611c69565b6108ec565b60405161037d9190611c11565b60405180910390f35b6103a0600480360381019061039b919061202c565b610955565b6040516103ad9190611b66565b60405180910390f35b6103d060048036038101906103cb9190611db1565b6109e9565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ad57506104ac82610a6f565b5b9050919050565b6060600080546104c39061209b565b80601f01602080910402602001604051908101604052809291908181526020018280546104ef9061209b565b801561053c5780601f106105115761010080835404028352916020019161053c565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b5050505050905090565b600061055182610ad9565b5061055b82610b61565b9050919050565b610574828261056f610b9e565b610ba6565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ea5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105e19190611cd7565b60405180910390fd5b60006105fe83836105f9610b9e565b610bb8565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610674578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161066b939291906120cc565b60405180910390fd5b50505050565b610682610bce565b61068a610c55565b565b610694610bce565b6000600760008154809291906106a990612132565b9190505590506106b98282610cb8565b5050565b6106d8838383604051806020016040528060008152506108cf565b505050565b6106f06000826106eb610b9e565b610bb8565b5050565b6000600660009054906101000a900460ff16905090565b600061071682610ad9565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107905760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107879190611cd7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107df610bce565b6107e96000610cd6565b565b6107f3610bce565b6107fb610d9c565b565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108369061209b565b80601f01602080910402602001604051908101604052809291908181526020018280546108629061209b565b80156108af5780601f10610884576101008083540402835291602001916108af565b820191906000526020600020905b81548152906001019060200180831161089257829003601f168201915b5050505050905090565b6108cb6108c4610b9e565b8383610dff565b5050565b6108da848484610578565b6108e684848484610f6e565b50505050565b60606108f782610ad9565b506000610902611125565b90506000815111610922576040518060200160405280600081525061094d565b8061092c8461113c565b60405160200161093d9291906121b6565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109f1610bce565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a635760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5a9190611cd7565b60405180910390fd5b610a6c81610cd6565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610ae58361120a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5857826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b4f9190611ded565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb38383836001611247565b505050565b6000610bc584848461140c565b90509392505050565b610bd6610b9e565b73ffffffffffffffffffffffffffffffffffffffff16610bf46107fd565b73ffffffffffffffffffffffffffffffffffffffff1614610c5357610c17610b9e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c4a9190611cd7565b60405180910390fd5b565b610c5d61142a565b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610ca1610b9e565b604051610cae9190611cd7565b60405180910390a1565b610cd282826040518060200160405280600081525061146a565b5050565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610da4611486565b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610de8610b9e565b604051610df59190611cd7565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e679190611cd7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f619190611b66565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561111f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fb2610b9e565b8685856040518563ffffffff1660e01b8152600401610fd4949392919061222f565b6020604051808303816000875af192505050801561101057506040513d601f19601f8201168201806040525081019061100d9190612290565b60015b611094573d8060008114611040576040519150601f19603f3d011682016040523d82523d6000602084013e611045565b606091505b50600081510361108c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110839190611cd7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461111d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111149190611cd7565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161114b846114c7565b01905060008167ffffffffffffffff81111561116a57611169611e7e565b5b6040519080825280601f01601f19166020018201604052801561119c5781602001600182028036833780820191505090505b509050600082602001820190505b6001156111ff578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816111f3576111f26122bd565b5b049450600085036111aa575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112805750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113b457600061129084610ad9565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112fb57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561130e575061130c8184610955565b155b1561135057826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113479190611cd7565b60405180910390fd5b81156113b257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000611416611486565b61142184848461161a565b90509392505050565b6114326106f4565b611468576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6114748383611834565b6114816000848484610f6e565b505050565b61148e6106f4565b156114c5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611525577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161151b5761151a6122bd565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611562576d04ee2d6d415b85acef81000000008381611558576115576122bd565b5b0492506020810190505b662386f26fc10000831061159157662386f26fc100008381611587576115866122bd565b5b0492506010810190505b6305f5e10083106115ba576305f5e10083816115b0576115af6122bd565b5b0492506008810190505b61271083106115df5761271083816115d5576115d46122bd565b5b0492506004810190505b6064831061160257606483816115f8576115f76122bd565b5b0492506002810190505b600a8310611611576001810190505b80915050919050565b6000806116268461120a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116685761166781848661192d565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116f9576116aa600085600080611247565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461177c576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118a65760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161189d9190611cd7565b60405180910390fd5b60006118b483836000610bb8565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119285760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161191f9190611cd7565b60405180910390fd5b505050565b6119388383836119f1565b6119ec57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119ad57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119a49190611ded565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119e39291906122ec565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611aa957508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a6a5750611a698484610955565b5b80611aa857508273ffffffffffffffffffffffffffffffffffffffff16611a9083610b61565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611afb81611ac6565b8114611b0657600080fd5b50565b600081359050611b1881611af2565b92915050565b600060208284031215611b3457611b33611abc565b5b6000611b4284828501611b09565b91505092915050565b60008115159050919050565b611b6081611b4b565b82525050565b6000602082019050611b7b6000830184611b57565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bbb578082015181840152602081019050611ba0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611be382611b81565b611bed8185611b8c565b9350611bfd818560208601611b9d565b611c0681611bc7565b840191505092915050565b60006020820190508181036000830152611c2b8184611bd8565b905092915050565b6000819050919050565b611c4681611c33565b8114611c5157600080fd5b50565b600081359050611c6381611c3d565b92915050565b600060208284031215611c7f57611c7e611abc565b5b6000611c8d84828501611c54565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cc182611c96565b9050919050565b611cd181611cb6565b82525050565b6000602082019050611cec6000830184611cc8565b92915050565b611cfb81611cb6565b8114611d0657600080fd5b50565b600081359050611d1881611cf2565b92915050565b60008060408385031215611d3557611d34611abc565b5b6000611d4385828601611d09565b9250506020611d5485828601611c54565b9150509250929050565b600080600060608486031215611d7757611d76611abc565b5b6000611d8586828701611d09565b9350506020611d9686828701611d09565b9250506040611da786828701611c54565b9150509250925092565b600060208284031215611dc757611dc6611abc565b5b6000611dd584828501611d09565b91505092915050565b611de781611c33565b82525050565b6000602082019050611e026000830184611dde565b92915050565b611e1181611b4b565b8114611e1c57600080fd5b50565b600081359050611e2e81611e08565b92915050565b60008060408385031215611e4b57611e4a611abc565b5b6000611e5985828601611d09565b9250506020611e6a85828601611e1f565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eb682611bc7565b810181811067ffffffffffffffff82111715611ed557611ed4611e7e565b5b80604052505050565b6000611ee8611ab2565b9050611ef48282611ead565b919050565b600067ffffffffffffffff821115611f1457611f13611e7e565b5b611f1d82611bc7565b9050602081019050919050565b82818337600083830152505050565b6000611f4c611f4784611ef9565b611ede565b905082815260208101848484011115611f6857611f67611e79565b5b611f73848285611f2a565b509392505050565b600082601f830112611f9057611f8f611e74565b5b8135611fa0848260208601611f39565b91505092915050565b60008060008060808587031215611fc357611fc2611abc565b5b6000611fd187828801611d09565b9450506020611fe287828801611d09565b9350506040611ff387828801611c54565b925050606085013567ffffffffffffffff81111561201457612013611ac1565b5b61202087828801611f7b565b91505092959194509250565b6000806040838503121561204357612042611abc565b5b600061205185828601611d09565b925050602061206285828601611d09565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120b357607f821691505b6020821081036120c6576120c561206c565b5b50919050565b60006060820190506120e16000830186611cc8565b6120ee6020830185611dde565b6120fb6040830184611cc8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213d82611c33565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361216f5761216e612103565b5b600182019050919050565b600081905092915050565b600061219082611b81565b61219a818561217a565b93506121aa818560208601611b9d565b80840191505092915050565b60006121c28285612185565b91506121ce8284612185565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612201826121da565b61220b81856121e5565b935061221b818560208601611b9d565b61222481611bc7565b840191505092915050565b60006080820190506122446000830187611cc8565b6122516020830186611cc8565b61225e6040830185611dde565b818103606083015261227081846121f6565b905095945050505050565b60008151905061228a81611af2565b92915050565b6000602082840312156122a6576122a5611abc565b5b60006122b48482850161227b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506123016000830185611cc8565b61230e6020830184611dde565b939250505056fea264697066735822122067ff245e478c37485e4a1a320efbccac161ab2a4b6e048a24d9b8ba542c9b28364736f6c63430008140033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
